@model MVC_MasterDetails_CRUD.Models.Client

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Applicant", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h1 class="text-center">Applicant</h1>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.LabelFor(model => model.IsAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.CheckBoxFor(model => model.IsAvailable)
                    @Html.ValidationMessageFor(model => model.IsAvailable, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <h4 class="text-bg-info text-center">Client Exprience</h4>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Company Name</th>
                        <th>Designation</th>
                        <th>Year Of Exprience</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Experiences.Count; i++)
                    {
                        <tr>
                            <td>
                                @Html.EditorFor(m => m.Experiences[i].Company, new { htmlAttributes = new { placeholder = "Company Name?", @class = "form-control" } })
                                @Html.ValidationMessageFor(m => m.Experiences[i].Company)
                            </td>
                            <td>
                                @Html.EditorFor(m => m.Experiences[i].Designation, new { htmlAttributes = new { placeholder = "Designation?", @class = "form-control" } })
                                @Html.ValidationMessageFor(m => m.Experiences[i].Designation)
                            </td>
                            <td>
                                @Html.EditorFor(m => m.Experiences[i].Year_Of_Experience, new { htmlAttributes = new { placeholder = "Year Of Exprience?", min = 0, @class = "form-control" } })
                                @Html.ValidationMessageFor(m => m.Experiences[i].Year_Of_Experience)
                            </td>

                            <td>
                                <input type="submit" value="Add" name="btn" class="btn btn-outline-info" formnovalidate />
                                <input type="submit" value="Remove" onclick="Remove(this)" name="btn" class="btn btn-dark" formnovalidate />
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        @*//New TABLE---*@

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.PicPath, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.HiddenFor(m=>m.PicPath);
                <input type="file" name="Picture" />
                @Html.ValidationMessageFor(model => model.PicPath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" name="btn" class="btn btn-info" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
    function Remove(e) {
        $(e).closest('tr').remove();
    }
    </script>
}
